{"objectClass":"NSDictionary","root":{"objectClass":"MindNode","ID":"FO55K","rootPoint":{"objectClass":"CGPoint","x":360,"y":1172.5},"lineColorHex":"#FF8C00","children":{"0":{"objectClass":"MindNode","ID":"ESN6R","lineColorHex":"#DC306C","children":{"0":{"objectClass":"MindNode","ID":"873Q6","lineColorHex":"#DC306C","children":{"0":{"objectClass":"MindNode","ID":"204L9","lineColorHex":"#DC306C","text":"find the definition f of a collection of functions, replace f by its definition"},"1":{"objectClass":"MindNode","ID":"1BSUV","lineColorHex":"#DC306C","text":"substitute the variables\nwith arguments"},"objectClass":"NSArray"},"text":"evaluates a function"},"objectClass":"NSArray"},"text":"Interpreter"},"1":{"objectClass":"MindNode","ID":"25M49","lineColorHex":"#BF58F5","children":{"0":{"objectClass":"MindNode","ID":"17KNJ","lineColorHex":"#BF58F5","children":{"0":{"objectClass":"MindNode","ID":"8G703","lineColorHex":"#BF58F5","text":"= is read as \"is defined as "},"1":{"objectClass":"MindNode","ID":"4FJ26","lineColorHex":"#BF58F5","text":"lefthand side, f(param1, param2, ...)"},"2":{"objectClass":"MindNode","ID":"BYQD6","lineColorHex":"#BF58F5","text":"righthand side, definition of function f(...)\n","remark":"Example, x * x + y","remarkDisplay":true},"objectClass":"NSArray"},"text":"definition","remark":"what the function does","remarkDisplay":true},"1":{"objectClass":"MindNode","ID":"TF45F","lineColorHex":"#BF58F5","text":"application","remark":"evaluate function for specific arguments","remarkDisplay":true},"2":{"objectClass":"MindNode","ID":"2D5UD","lineColorHex":"#BF58F5","children":{"0":{"objectClass":"MindNode","ID":"KF6GE","lineColorHex":"#BF58F5","text":"Arithmetic (+, - , *, /)"},"1":{"objectClass":"MindNode","ID":"F4JHO","lineColorHex":"#BF58F5","text":"Comparison (<, >)"},"2":{"objectClass":"MindNode","ID":"36B3M","lineColorHex":"#BF58F5","text":"if then else"},"3":{"objectClass":"MindNode","ID":"149AX","lineColorHex":"#BF58F5","text":"null (x)","remark":"true if x is an empty list, false otherwise"},"4":{"objectClass":"MindNode","ID":"V218F","lineColorHex":"#BF58F5","text":"eq(x, y)"},"5":{"objectClass":"MindNode","ID":"6DEQ2","lineColorHex":"#BF58F5","text":"atom(x)"},"objectClass":"NSArray"},"text":"Primitive Functions"},"objectClass":"NSArray"},"text":"function","remark":"A mapping from domain to co-domain","remarkDisplay":true},"2":{"objectClass":"MindNode","ID":"QRB6D","lineColorHex":"#26BBFF","children":{"0":{"objectClass":"MindNode","ID":"IJD48","lineColorHex":"#26BBFF","children":{"0":{"objectClass":"MindNode","ID":"3I7ZN","lineColorHex":"#26BBFF","text":"primitive"},"1":{"objectClass":"MindNode","ID":"36151","lineColorHex":"#26BBFF","text":"inseparable"},"objectClass":"NSArray"},"text":"Atoms","remark":"integers and real numbers, identifiers without space","remarkDisplay":true},"1":{"objectClass":"MindNode","ID":"226E2","lineColorHex":"#26BBFF","children":{"0":{"objectClass":"MindNode","ID":"CK1O5","lineColorHex":"#26BBFF","children":{"0":{"objectClass":"MindNode","ID":"6RPT9","lineColorHex":"#26BBFF","text":"() is an empty list"},"1":{"objectClass":"MindNode","ID":"4PP84","lineColorHex":"#26BBFF","text":"can be nested to arbitrary"},"objectClass":"NSArray"},"text":"definition"},"1":{"objectClass":"MindNode","ID":"X2G75","lineColorHex":"#26BBFF","children":{"0":{"objectClass":"MindNode","ID":"79I2I","lineColorHex":"#26BBFF","children":{"0":{"objectClass":"MindNode","ID":"677LJ","lineColorHex":"#26BBFF","children":{"0":{"objectClass":"MindNode","ID":"8P871","lineColorHex":"#26BBFF","children":{"0":{"objectClass":"MindNode","ID":"FA125","lineColorHex":"#26BBFF","children":{"0":{"objectClass":"MindNode","ID":"412V0","lineColorHex":"#26BBFF","text":"returns the first element in a list"},"1":{"objectClass":"MindNode","ID":"F572K","lineColorHex":"#26BBFF","text":"alias f"},"2":{"objectClass":"MindNode","ID":"44LC0","lineColorHex":"#26BBFF","text":"first(  (a1 ... an)  ) -> a1"},"3":{"objectClass":"MindNode","ID":"7V3WJ","lineColorHex":"#26BBFF","children":{"0":{"objectClass":"MindNode","ID":"M4KVZ","lineColorHex":"#26BBFF","text":"not a list"},"1":{"objectClass":"MindNode","ID":"8C4F2","lineColorHex":"#26BBFF","text":"empty list"},"objectClass":"NSArray"},"text":"error to call"},"objectClass":"NSArray"},"text":"first"},"1":{"objectClass":"MindNode","ID":"F7K8J","lineColorHex":"#26BBFF","children":{"0":{"objectClass":"MindNode","ID":"54XTY","lineColorHex":"#26BBFF","text":"returns all except the first element in a list as a \"list\""},"1":{"objectClass":"MindNode","ID":"Q43P6","lineColorHex":"#26BBFF","text":"alias r"},"2":{"objectClass":"MindNode","ID":"SO686","lineColorHex":"#26BBFF","text":"rest(  (a1 a2 ... an)  ) -> (a2 ... an)"},"3":{"objectClass":"MindNode","ID":"G74QS","lineColorHex":"#26BBFF","children":{"0":{"objectClass":"MindNode","ID":"XK1D7","lineColorHex":"#26BBFF","text":"not a list"},"1":{"objectClass":"MindNode","ID":"S3GT6","lineColorHex":"#26BBFF","text":"empty list"},"objectClass":"NSArray"},"text":"error to call"},"objectClass":"NSArray"},"text":"rest"},"objectClass":"NSArray"},"text":"Selector","remark":"Pay attention to the bracket\nDo not change the original list"},"1":{"objectClass":"MindNode","ID":"8GC96","lineColorHex":"#26BBFF","children":{"0":{"objectClass":"MindNode","ID":"647E6","lineColorHex":"#26BBFF","children":{"0":{"objectClass":"MindNode","ID":"32T72","lineColorHex":"#26BBFF","text":"cons (X, (a1 ... an)  ) --> (X a1 ... an)"},"1":{"objectClass":"MindNode","ID":"76868","lineColorHex":"#26BBFF","text":"cons(a, () ) = (a)"},"2":{"objectClass":"MindNode","ID":"18YL1","lineColorHex":"#26BBFF","children":{"0":{"objectClass":"MindNode","ID":"86F6J","lineColorHex":"#26BBFF","text":"cons(b, () ) = (b)"},"1":{"objectClass":"MindNode","ID":"BMJ4S","lineColorHex":"#26BBFF","text":"cons( (b), () ) = ( (b) )"},"2":{"objectClass":"MindNode","ID":"35J1U","lineColorHex":"#26BBFF","text":"cons( a,  ( (b) ) ) = (a (b) )"},"objectClass":"NSArray"},"text":"nested list L = (a (b) )"},"objectClass":"NSArray"},"text":"cons"},"objectClass":"NSArray"},"text":"Constructor"},"objectClass":"NSArray"},"text":"three primitive functions"},"objectClass":"NSArray"},"text":"accessing"},"objectClass":"NSArray"},"text":"manipulating"},"objectClass":"NSArray"},"text":"Lists"},"objectClass":"NSArray"},"text":"Objects"},"objectClass":"NSArray"},"text":"Fun Language","remark":"- is a collection of functions\n- functions are defined over lists and atoms\n- do computation by evaluate arguments"},"ID":"M5OYY","style":600}